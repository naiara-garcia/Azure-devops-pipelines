name: Keycloak-user-management

trigger: none
pr: none

pool:
  name: Factory-VSS-Agents

variables:
  - group: factory-keycloak-user-mgmt
  - name: keycloak_hostname
    value: <keycloak_hostname>
    readonly: true
  - name: user_realm
    value: <realm>
    readonly: true

parameters:
  - name: mail
    displayName: User Email
    type: string
  - name: option
    displayName: User option
    type: string
    values:
      - create_user
      - update_user
      - remove_user
  - name: group
    displayName: Group Option
    type: string
    values:
      - dpro_developer
      - dplt_developer

stages:
  - stage: Manage_Keycloak_Users
    jobs:
      - job: managing_keycloak_users

        steps:
          - task: AzureKeyVault@2
            displayName: "Azure Key Vault secrets"
            inputs:
              azureSubscription: "<subscription>"
              KeyVaultName: "<keyvault_name>"
              SecretsFilter: "<secrets>"
              RunAsPreJob: true

          - task: AzureCLI@2
            displayName: "Getting the username of the Azure Active Directory user"
            condition: in( '${{parameters.option}}', 'create_user')
            env:
              ARM_CLIENT_ID: $(terraform-app-client-id)
              ARM_CLIENT_SECRET: $(terraform-app-secret)
              ARM_TENANT_ID: $(tenant)
            inputs:
              azureSubscription: "<subscription>"
              scriptType: "bash"
              scriptLocation: "inlineScript"
              inlineScript: |
                #!/bin/bash

                user_data=`az ad user show --id "${{ parameters.mail }}"`
                name=(`echo "$user_data" | grep displayName | cut -d':' -f2 | awk -F'"' '{print $2}'`)
                firstname=${name[0]}
                lastname=${name[1]}
                azuserid=$(echo $user_data | grep id | cut -d':' -f7 | awk -F'"' '{print $2}')  

                echo "##vso[task.setvariable variable=firstname]$firstname" 
                echo "##vso[task.setvariable variable=lastname]$lastname"    
                echo "##vso[task.setvariable variable=azuserid]$azuserid" 

          - task: Bash@3
            displayName: "Creating user at Keycloak"
            condition: in( '${{parameters.option}}', 'create_user')
            inputs:
              targetType: inline
              script: |
                #!/bin/bash

                chmod +x ./Keycloak/keycloak-user-creation.sh

                docker run --entrypoint `pwd`/Keycloak/keycloak-user-creation.sh -v `pwd`:`pwd` -w `pwd` -i --rm quay.io/keycloak/keycloak:19.0.3 ${{ variables.keycloak_hostname }} ${{ variables.user_realm }} $(password) ${{ parameters.mail }} $(firstname) $(lastname) $(azuserid)

          - task: Bash@3
            displayName: "Modifying user at Keycloak groups"
            condition: notIn( '${{parameters.option}}', 'remove_user')
            inputs:
              targetType: inline
              script: |
                #!/bin/bash

                chmod +x ./Keycloak/keycloak-user-mgmt.sh

                docker run --entrypoint `pwd`/Keycloak/keycloak-user-mgmt.sh -v `pwd`:`pwd` -w `pwd` -i --rm quay.io/keycloak/keycloak:19.0.3 ${{ variables.keycloak_hostname }} ${{ variables.user_realm }} $(password) ${{ parameters.mail }} ${{ parameters.group }}

          - task: Bash@3
            displayName: "Removing user at Keycloak"
            condition: in( '${{parameters.option}}', 'remove_user')
            inputs:
              targetType: inline
              script: |
                #!/bin/bash

                chmod +x ./Keycloak/keycloak-user-deletion.sh

                docker run --entrypoint `pwd`/Keycloak/keycloak-user-deletion.sh -v `pwd`:`pwd` -w `pwd` -i --rm quay.io/keycloak/keycloak:19.0.3 ${{ variables.keycloak_hostname }} ${{ variables.user_realm }} $(password) ${{ parameters.mail }}
