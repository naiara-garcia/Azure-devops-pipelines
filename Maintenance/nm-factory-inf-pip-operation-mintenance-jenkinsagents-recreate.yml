name: nm-factory-inf-pip-operation-maintenance-jenkinsagents-dpl-dev

trigger: none # will disable CI builds entirely
 
pool:
  name: Factory-VSS-Agents

# schedules:
# - cron: "30 2 * * *"
#   displayName: Nightly backup
#   branches:
#     include:
#     - main
#   always: true

resources:
  repositories:
  - repository: nm-factory-inf-env-dev
    type: git
    name: ecl-ado-prj-iac/nm-factory-inf-env-dev

stages:
- stage: recreate_jenkins_agent_vm 
  jobs:
  - job: recreate_jenkins_agent_vm
    steps:
    - script: |
        echo "Installing Terraform"
        echo "wget -q "https://releases.hashicorp.com/terraform/1.3.0/terraform_1.3.0_linux_amd64.zip"; unzip terraform_1.3.0_linux_amd64.zip"
        wget -q "https://releases.hashicorp.com/terraform/1.3.0/terraform_1.3.0_linux_amd64.zip"; unzip terraform_1.3.0_linux_amd64.zip
        echo "Move terraform binary to /usr/local/bin"
        sudo mv ./terraform /usr/local/bin/
      displayName: "Install Terraform"

    - script: |
        echo "Cloning repository"
        echo "az config"
        az config set extension.use_dynamic_install=yes_without_prompt
        echo "Executing ... az devops login"
        echo $(System.AccessToken) | az devops login
        git clone -c http.extraheader="AUTHORIZATION: bearer $(System.AccessToken)" https://ecl-ado-factory@dev.azure.com/ecl-ado-factory/ecl-ado-prj-iac/_git/nm-factory-inf-env-dev
        ls -lat
        cd nm-factory-inf-env-dev
      displayName: "Clone repository"

    - script: |
        echo "terraform init"
        terraform init
        echo "terraform plan"
        terraform plan
      displayName: "Run Terraform"      