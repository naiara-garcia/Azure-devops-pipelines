name: nm-factory-inf-pip-operation-ciam-okta-dpro-user-mgmt

trigger: none # will disable CI builds entirely
 
pool:
  name: Factory-VSS-Agents

parameters:
- name: firstName
  displayName: First Name
  type: string

- name: lastName
  displayName: Last Name
  type: string

- name: email
  displayName: Email
  type: string

- name: option
  displayName: Option
  type: string
  values:
    - create_user
    - delete_user

variables:
- name: oktaDomain
  value: "ciam-nm-dev-dpro-admin.okta.com"

stages:
- stage: okta_user_management
  jobs:
  - job: create_okta_user
    condition: ${{ eq(parameters.option, 'create_user') }}
    steps:
    - task: AzureKeyVault@2
      displayName: 'Azure Key Vault: ecl-az-fact-kvt-01-main'
      inputs:
        azureSubscription: 'ecl-az-fact-svc-01-armconnection'
        KeyVaultName: 'ecl-az-fact-kvt-01-main'
        SecretsFilter: 'okta-ciam-token'
        RunAsPreJob: true  

    - task: Bash@3
      displayName: 'Creation of the user'
      inputs:
        targetType: 'inline'
        script: |
          echo "Creating user and sending activation mail"
          curl --no-progress-meter -w '{"http_code": "%{http_code}"}' -X POST \
          -H "Accept: application/json" \
          -H "Content-Type: application/json" \
          -H "Authorization: SSWS ${OKTA_CIAM_TOKEN}" \
          -d '{
            "profile": {
              "firstName": "'"${{parameters.firstName}}"'",
              "lastName": "'"${{parameters.lastName}}"'",
              "email": "'"${{parameters.email}}"'",
              "login": "'"${{parameters.email}}"'"
            }
          }' "https://${{variables.oktaDomain}}/api/v1/users?activate=true" | jq -s '.[-1] * .[-2]' | jq "{ http_code: .http_code, id: .id, status: .status, profile: .profile, errorSummary: .errorSummary, errorCauses: .errorCauses }" > resp.json
          cat resp.json
          http_code=$(jq .http_code resp.json | tr -d '"') 
          if [[ $http_code -ge 400 ]]; then
            echo "Operation Failed, the user has not been created"
            exit -1
          else
            echo "User created successfully"
          fi

      env:
        OKTA_CIAM_TOKEN: $(okta-ciam-token)

  - job: adding_user_to_groups
    condition: ${{ eq(parameters.option, 'create_user') }}
    dependsOn: create_okta_user
    steps:  
    - task: AzureKeyVault@2
      displayName: 'Azure Key Vault: ecl-az-fact-kvt-01-main'
      inputs:
        azureSubscription: 'ecl-az-fact-svc-01-armconnection'
        KeyVaultName: 'ecl-az-fact-kvt-01-main'
        SecretsFilter: 'okta-ciam-token'
        RunAsPreJob: true  

    - task: Bash@3
      displayName: 'Adding user to group(s)'
      inputs:
        targetType: 'inline'
        script: |   
          echo "Create variable with group(s) needed"
          list_group=("ECTL-Users")

          echo "Get group ids from the group(s) at which the user will be added"
          for i in ${!list_group[@]}; do
            listid_group[$i]=$(curl -XGET \
            -H "Accept: application/json" \
            -H "Content-Type: application/json" \
            -H "Authorization: SSWS ${OKTA_CIAM_TOKEN}" \
            "https://${{variables.oktaDomain}}/api/v1/groups?search=profile.name+eq+%22${list_group[$i]}%22" | jq -r '.[].id')
          done

          echo "Get the user ID"
          userId=$(curl -X GET \
          -H "Accept: application/json" \
          -H "Content-Type: application/json" \
          -H "Authorization: SSWS ${OKTA_CIAM_TOKEN}" \
          "https://${{variables.oktaDomain}}/api/v1/users?search=profile.email+eq+%22${{parameters.email}}%22" | jq -r '.[].id')    

          echo "Adding the user to the group(s)"
          for i in ${!listid_group[@]}; do
            curl --no-progress-meter -w '{"http_code": "%{http_code}"}' -X PUT \
            -H "Accept: application/json" \
            -H "Content-Type: application/json" \
            -H "Authorization: SSWS ${OKTA_CIAM_TOKEN}" \
            "https://${{variables.oktaDomain}}/api/v1/groups/${listid_group[$i]}/users/$userId" | jq -r '.http_code' > http_code
            if [[ $http_code -ge 400 ]]; then
              echo "User has not been added to ${list_group[$i]} group"
              exit -1
            else
              echo "User successfully added to ${list_group[$i]} group"
            fi
          done       

      env:
        OKTA_CIAM_TOKEN: $(okta-ciam-token)

  - job: delete_okta_user
    condition: ${{ eq(parameters.option, 'delete_user') }}
    steps:
    - task: AzureKeyVault@2
      displayName: 'Azure Key Vault: ecl-az-fact-kvt-01-main'
      inputs:
        azureSubscription: 'ecl-az-fact-svc-01-armconnection'
        KeyVaultName: 'ecl-az-fact-kvt-01-main'
        SecretsFilter: 'okta-ciam-token'
        RunAsPreJob: true  

    - task: Bash@3
      displayName: 'Deleting user'
      inputs:
        targetType: 'inline'
        script: |
          echo "Getting user id for ${{parameters.email}}."
          userId=$(curl -X GET \
          -H "Accept: application/json" \
          -H "Content-Type: application/json" \
          -H "Authorization: SSWS ${OKTA_CIAM_TOKEN}" \
          "https://${{variables.oktaDomain}}/api/v1/users?search=profile.email+sw+%22${{parameters.email}}%22" | jq -r '.[].id')
          if [[ -z userId ]]; then
            echo "User does not exist"
            exit -1
          else
            echo "User successfully loaded"
          fi

          echo "Deactivating the user before deleting it"
          curl --no-progress-meter -w '{"http_code": "%{http_code}"}' -X POST \
          -H "Accept: application/json" \
          -H "Content-Type: application/json" \
          -H "Authorization: SSWS ${OKTA_CIAM_TOKEN}" \
          "https://${{variables.oktaDomain}}/api/v1/users/$userId/lifecycle/deactivate?sendEmail=false" | jq -s '.[-1] * .[-2]' | jq "{ http_code: .http_code, id: .id, status: .status, profile: .profile, errorSummary: .errorSummary, errorCauses: .errorCauses }" > resp.json

          http_code=$(jq .http_code resp.json | tr -d '"') 
          if [[ $http_code -ge 400 ]]; then
            echo "Operation Failed, the user has not been deactivated"
            exit -1
          else
            echo "User deactivated successfully"
          fi

          echo "Deleting the user"
          curl --no-progress-meter -w '{"http_code": "%{http_code}"}' -X DELETE \
          -H "Accept: application/json" \
          -H "Content-Type: application/json" \
          -H "Authorization: SSWS ${OKTA_CIAM_TOKEN}" \
          "https://${{variables.oktaDomain}}/api/v1/users/$userId?sendEmail=false" | jq -s '.[-1] * .[-2]' | jq "{ http_code: .http_code, id: .id, status: .status, profile: .profile, errorSummary: .errorSummary, errorCauses: .errorCauses }" > resp.json
          http_code=$(jq .http_code resp.json | tr -d '"') 
          if [[ $http_code -ge 400 ]]; then
            echo "Operation Failed, the user has not been deleted"
            exit -1
          else
            echo "User deleted successfully"
          fi

      env:
        OKTA_CIAM_TOKEN: $(okta-ciam-token)