name: nm-factory-inf-pip-operation-adding-user-to-azure

trigger: none # will disable CI builds entirely
 
pool:
  name: Factory-VSS-Agents

resources:
  repositories:
  - repository: nm-factory-inf-env-pro
    type: git
    name: ecl-ado-prj-iac/nm-factory-inf-env-pro

parameters:
- name: mail
  displayName: User Email
  type: string
- name: option
  displayName: Group Option
  type: string
  values: 
  - dpro_developer
  - dplt_pipeline
  - dplt_developer
  - infra_admin
  - remove_user
- name: branch
  displayName: Ticket Number
  type: string

stages:
- stage: Adding_or_removing_user_from_Azure_groups 
  jobs:
  - job: add_user_to_azure
    variables:
    - name: BRANCHTARGET
      value: "feature/${{ parameters.branch }}"
    - name: BRANCHSOURCE
      value: "refs/heads/main"
    - name: AZUREREPO
      value: "nm-factory-inf-env-pro"
    - name: AZUREDEVOPSREPO
      value: "nm-factory-inf-env-azdevops"
    - name: ORGURL
      value: "https://dev.azure.com/ecl-ado-factory"
    - name: PROJECT
      value: "ecl-ado-prj-iac"
    - name: AZUREURIBRANCHSTATUS
      value: "${{ variables.ORGURL }}/${{ variables.PROJECT }}/_apis/git/repositories/${{ variables.AZUREREPO }}/stats/branches?name=${{ variables.BRANCHTARGET }}"
    - name: AZUREURICHECKACTIVEPR
      value: "${{ variables.ORGURL }}/${{ variables.PROJECT }}/_apis/git/repositories/${{ variables.AZUREREPO }}/pullrequests?searchCriteria.targetRefName=${{ variables.BRANCHTARGET }}&searchCriteria.sourceRefName=${{ variables.BRANCHSOURCE }}"       
    - name: AZUREDEVURIBRANCHSTATUS
      value: "${{ variables.ORGURL }}/${{ variables.PROJECT }}/_apis/git/repositories/${{ variables.AZUREDEVOPSREPO }}/stats/branches?name=${{ variables.BRANCHTARGET }}"
    - name: AZUREDEVURICHECKACTIVEPR
      value: "${{ variables.ORGURL }}/${{ variables.PROJECT }}/_apis/git/repositories/${{ variables.AZUREDEVOPSREPO }}/pullrequests?searchCriteria.targetRefName=${{ variables.BRANCHTARGET }}&searchCriteria.sourceRefName=${{ variables.BRANCHSOURCE }}"               
    - name: REVIEWERS
      value: ecl-ado-notification-team

    steps:
    - task: AzureKeyVault@2
      displayName: 'Azure Key Vault: ecl-az-seed-kvt-01-tfkv'
      inputs:
        azureSubscription: 'ecl-az-fact-svc-01-armconnection'
        KeyVaultName: 'ecl-az-seed-kvt-01-tfkv'
        SecretsFilter: 'terraform-app-client-id, terraform-app-secret'
        RunAsPreJob: true

    - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
      displayName: 'Install Terraform 1.3.0'
      inputs:
        terraformVersion: 1.3.0

    - checkout: nm-factory-inf-env-pro
        
    - task: AzureCLI@2
      displayName: "Clone repository to modify and push new branch" 
      env:
        ARM_CLIENT_ID: $(terraform-app-client-id)
        ARM_CLIENT_SECRET: $(terraform-app-secret)
        ARM_TENANT_ID: "9e296acd-1e44-44f0-8c77-cc9dbce85489"  #Must move to KeyValut or inside provider.tf
      inputs:
        azureSubscription: 'ecl-az-fact-svc-01-armconnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          #!/bin/bash

          echo "Download the repository $AZUREREPO"
          git -c http.extraHeader="Authorization: bearer $(System.AccessToken)" clone https://ecl-ado-factory@dev.azure.com/ecl-ado-factory/$PROJECT/_git/$AZUREREPO

          echo "Create a new branch locally for $AZUREREPO repository"
          cd $AZUREREPO/004-aad
          git checkout -b $BRANCHTARGET

          echo "Added a new line to terraform.tfvars file at $AZUREREPO repository"
          case ${{ parameters.option }} in
            dpro_developer)
              echo "Check that user is not currently at the group dpro_developer"
              mail=`sed -n '/^group_infra_dprodev_members/,/^]/p' terraform.tfvars | grep ${{ parameters.mail }}`
              if [[ -z "$mail" ]] 
              then 
                echo "Adding new user to dpro_developer group"
                sed -i "/group_infra_dprodev_members/a \ \ \"${{ parameters.mail }}\"," terraform.tfvars
                echo "User added to dpro_developer group"
              fi
            ;;
            dplt_pipeline)
              echo "Check that user is not currently at the dplt_pipeline Azure Group"
              mail=`sed -n '/^group_dpro_dev_members/,/^]/p' terraform.tfvars | grep ${{ parameters.mail }}`
              if [[ -z "$mail" ]] 
              then 
                echo "Adding new user to dplt_pipeline Azure Group"
                sed -i "/group_dpro_dev_members/a \ \ \"${{ parameters.mail }}\"," terraform.tfvars
              fi   
              echo "Check that user is not currently at the dplt_pipeline Azure Devops Group"
              mail=`sed -n '/^group_azdevops_dpro_admin_members/,/^]/p' terraform.tfvars | grep ${{ parameters.mail }}`
              if [[ -z "$mail" ]] 
              then 
                echo "Adding new user to dplt_pipeline Azure Devops Group"
                sed -i "/group_azdevops_dpro_admin_members/a \ \ \"${{ parameters.mail }}\"," terraform.tfvars
                echo "User added to dplt_pipeline groups"
              fi        
            ;;
            dplt_developer)
              echo "Check that user is not currently at the group dplt_developer"
              mail=`sed -n '/^group_dplt_dev_members/,/^]/p' terraform.tfvars | grep ${{ parameters.mail }}`
              if [[ -z "$mail" ]] 
              then 
                echo "Adding new user to dplt_developer Azure Devops Group"
                sed -i "/group_dplt_dev_members/a \ \ \"${{ parameters.mail }}\"," terraform.tfvars
                echo "User added to dplt_developer group"
              fi     
            ;;
            infra_admin)
              echo "Check that user is not currently at the group infra_dev_owners"
              mail=`sed -n '/^group_infra_dev_owners/,/^]/p' terraform.tfvars | grep ${{ parameters.mail }}`
              if [[ -z "$mail" ]] 
              then 
                echo "Adding new user to infra_dev_owners group"
                sed -i "/group_infra_dev_owners/a \ \ \"${{ parameters.mail }}\"," terraform.tfvars
              fi     
              echo "Check that user is not currently at the group azdevops_dplt_admin_owners"
              mail=`sed -n '/^group_azdevops_dplt_admin_owners/,/^]/p' terraform.tfvars | grep ${{ parameters.mail }}`
              if [[ -z "$mail" ]] 
              then 
                echo "Adding new user to azdevops_dplt_admin_owners group"
                sed -i "/group_azdevops_dplt_admin_owners/a \ \ \"${{ parameters.mail }}\"," terraform.tfvars
              fi       
              echo "Check that user is not currently at the group azdevops_dpro_admin_owners"
              mail=`sed -n '/^group_azdevops_dpro_admin_owners/,/^]/p' terraform.tfvars | grep ${{ parameters.mail }}`
              if [[ -z "$mail" ]] 
              then 
                echo "Adding new user to azdevops_dpro_admin_owners group"
                sed -i "/group_azdevops_dpro_admin_owners/a \ \ \"${{ parameters.mail }}\"," terraform.tfvars
                echo "User added to infra_admin groups"
              fi       
            ;;
            remove_user)
              echo "Remove user from all groups"
              sed -i "/${{ parameters.mail }}/d" terraform.tfvars
              echo "User removed from all groups"
            ;;
            *)
              echo "Bad option"
            ;;
          esac

          echo "Commit new branch to remote repository $AZUREREPO"
          git add *
          git commit -m "Performed the actions requested at ticket ${{ parameters.branch }}"

          echo "Push the new branch to remote repository $AZUREREPO"
          git -c http.extraHeader="Authorization: bearer $(System.AccessToken)" push origin $BRANCHTARGET

          echo "Launched terraform commands"
          echo "terraform init"
          terraform init
          echo "terraform apply"
          terraform apply -auto-approve

    - task: AzureCLI@2
      displayName: "Pull Request creation for ${{ variables.AZUREREPO }} repository" 
      env:
        ARM_CLIENT_ID: $(terraform-app-client-id)
        ARM_CLIENT_SECRET: $(terraform-app-secret)
        ARM_TENANT_ID: "9e296acd-1e44-44f0-8c77-cc9dbce85489"  #Must move to KeyValut or inside provider.tf
      inputs:
        azureSubscription: 'ecl-az-fact-svc-01-armconnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          #!/bin/bash    

          echo "Create needed variables for the PR at $AZUREREPO repository"
          STATUS=`curl -u :$(System.AccessToken) $AZUREURIBRANCHSTATUS | jq -r .aheadCount`
          ACTIVEPR=`curl -u :$(System.AccessToken) $AZUREURICHECKACTIVEPR | jq -r .count`

          echo "Install Azure Devops extension"
          az config set extension.use_dynamic_install=yes_without_prompt
          az extension add --name azure-devops

          echo "Login to az devops to allow PR creation"
          echo $(System.AccessToken) | az devops login

          echo "Check that the branch has changes from main and also that the PR is not created previously before creating the new PR at $AZUREREPO repository"
          if [[ $STATUS == '0' ]]
          then
            echo "Current branch contains last changes from main in $AZUREREPO repository"
          else
            if [[ $ACTIVEPR > '0' ]]
            then
              echo "PR exists already at $AZUREREPO repository"
            else
              az repos pr create -r $AZUREREPO -s $BRANCHTARGET -p $PROJECT --org $ORGURL --delete-source-branch true --description "## What does this PR do?" "This PR is to add/remove users indicated at ticket ${{ parameters.branch }}" "" "## Why is it necessary?" "Because the users need this access to perform his daily job." "" "## Pull request type" "- [ ] Bugfix" "- [ ] New feature" "- [X] IaC change" "- [ ] Add new alert" "- [ ] Alert modification" "" "## Related ticket" "${{ parameters.branch }}" "" "Close or affect [this](https://jira.eurocontrol.int/browse/${{ parameters.branch }}) ticket." "" "## CI Output" "" "N/A" "" "## Checks" "" "- [ ] The PR has a descriptive title" "- [ ] The changes section has been checked" "- [ ] A person has been assigned to this PR" "- [ ] Clear comments `<-- -->` from sections" --reviewer $REVIEWERS --title "Performed the actions requested at ticket ${{ parameters.branch }}"   
            fi
          fi      

    - task: AzureCLI@2
      displayName: "Merging with main branch at repository ${{ variables.AZUREREPO }}" 
      env:
        ARM_CLIENT_ID: $(terraform-app-client-id)
        ARM_CLIENT_SECRET: $(terraform-app-secret)
        ARM_TENANT_ID: "9e296acd-1e44-44f0-8c77-cc9dbce85489"  #Must move to KeyValut or inside provider.tf
      inputs:
        azureSubscription: 'ecl-az-fact-svc-01-armconnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          #!/bin/bash    

          echo "Install Azure Devops extension"
          az config set extension.use_dynamic_install=yes_without_prompt
          az extension add --name azure-devops

          echo "Login to az devops to allow PR creation"
          echo $(System.AccessToken) | az devops login

          echo "Get the PR ID to perform the merge action"
          PRID=`az repos pr list --org $ORGURL -p $PROJECT -r $AZUREREPO -s $BRANCHTARGET | grep codeReviewId | awk '{print $2}' | cut -d',' -f1`

          if [[ -z "$PRID" ]]
          then
            echo "Login to az devops as naiaragarcia@paradigmadigital.com"
            echo "dga2ck3ce3ts4kf7jr76gthb4vcqt7qj7mj7hokjsb4ftuau47ta" | az devops login          

            echo "Approve the PR created"
            az repos pr set-vote --org $ORGURL --id $PRID --vote approve

            echo "Merging the PR with main"
            az repos pr update --org $ORGURL --id $PRID --status completed
          else
            echo "PR does not exist"
          fi

    - task: AzureCLI@2
      displayName: "Added user license for Azure Devops" 
      env:
        ARM_CLIENT_ID: $(terraform-app-client-id)
        ARM_CLIENT_SECRET: $(terraform-app-secret)
        ARM_TENANT_ID: "9e296acd-1e44-44f0-8c77-cc9dbce85489"  #Must move to KeyValut or inside provider.tf
      inputs:
        azureSubscription: 'ecl-az-fact-svc-01-armconnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          #!/bin/bash   

          if [[ ${{ parameters.option }} == dplt_pipeline ]] || [[ ${{ parameters.option }} == remove_user ]]
          then
            echo "Download the $AZUREDEVOPSREPO repository"
            git -c http.extraHeader="Authorization: bearer $(System.AccessToken)" clone https://ecl-ado-factory@dev.azure.com/ecl-ado-factory/$PROJECT/_git/$AZUREDEVOPSREPO

            echo "Create a new branch locally for $AZUREDEVOPSREPO repository"
            cd $AZUREDEVOPSREPO
            git checkout -b $BRANCHTARGET

            case ${{ parameters.option }} in
              dplt_pipeline)
                echo "Check that user is not currently at the group all_users"
                mail=`sed -n '/^all_users/,/^]/p' terraform.tfvars | grep ${{ parameters.mail }}`
                if [[ -z "$mail" ]] 
                then 
                  echo "Adding new user to all_users group"
                  sed -i "/all_users/a \ \ \"${{ parameters.mail }}\"," terraform.tfvars
                  echo "User added to all_users group"
                fi
              ;;
              remove_user)
                echo "Remove user from all groups"
                sed -i "/${{ parameters.mail }}/d" terraform.tfvars
                echo "User removed from all groups"
              ;;
              *)
                echo "Bad option"
              ;;
            esac

            echo "Commit new branch to remote repository $AZUREDEVOPSREPO"
            git add *
            git commit -m "Performed the actions requested at ticket ${{ parameters.branch }}"

            echo "Login to az devops"
            echo $(System.AccessToken) | az devops login

            echo "Push the new branch to remote repository $AZUREDEVOPSREPO"
            git -c http.extraHeader="Authorization: bearer $(System.AccessToken)" push origin $BRANCHTARGET

            echo "Launched terraform commands"
            echo "terraform init"
            terraform init
            echo "terraform apply"
            terraform apply -auto-approve

            echo "Create needed variables for the PR at $AZUREDEVOPSREPO repository"
            STATUS=`curl -u :$(System.AccessToken) $AZUREDEVURIBRANCHSTATUS | jq -r .aheadCount`
            ACTIVEPR=`curl -u :$(System.AccessToken) $AZUREDEVURICHECKACTIVEPR | jq -r .count`

            echo "Check that the branch has changes from main and also that the PR is not created previously before creating the new PR at $AZUREDEVOPSREPO repository"
            if [[ $STATUS == '0' ]]
            then
              echo "Current branch contains last changes from main in $AZUREDEVOPSREPO repository"
            else
              if [[ $ACTIVEPR > '0' ]]
              then
                echo "PR exists already at $AZUREDEVOPSREPO repository"
              else
                az repos pr create -r $AZUREDEVOPSREPO -s $BRANCHTARGET -p $PROJECT --org $ORGURL --delete-source-branch true --description "## What does this PR do?" "This PR is to add/remove users indicated at ticket ${{ parameters.branch }}" "" "## Why is it necessary?" "Because the users need this access to perform his daily job." "" "## Pull request type" "- [ ] Bugfix" "- [ ] New feature" "- [X] IaC change" "- [ ] Add new alert" "- [ ] Alert modification" "" "## Related ticket" "${{ parameters.branch }}" "" "Close or affect [this](https://jira.eurocontrol.int/browse/${{ parameters.branch }}) ticket." "" "## CI Output" "" "N/A" "" "## Checks" "" "- [ ] The PR has a descriptive title" "- [ ] The changes section has been checked" "- [ ] A person has been assigned to this PR" "- [ ] Clear comments `<-- -->` from sections" --reviewer $REVIEWERS --title "Performed the actions requested at ticket ${{ parameters.branch }}"   
              fi
            fi
          fi      

          echo "Get the PR ID to perform the merge action"
          PRID=`az repos pr list --org $ORGURL -p $PROJECT -r $AZUREDEVOPSREPO -s $BRANCHTARGET | grep codeReviewId | awk '{print $2}' | cut -d',' -f1`

          if [[ -z "$PRID" ]]
          then
            echo "Login to az devops as naiaragarcia@paradigmadigital.com"
            echo "dga2ck3ce3ts4kf7jr76gthb4vcqt7qj7mj7hokjsb4ftuau47ta" | az devops login

            echo "Approve the PR created"
            az repos pr set-vote --org $ORGURL --id $PRID --vote approve

            echo "Merging the PR with main"
            az repos pr update --org $ORGURL --id $PRID --status completed
          else
            echo "PR does not exist"
          fi
