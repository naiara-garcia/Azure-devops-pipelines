name: nm-factory-inf-pip-operation

pool:
  name: Factory-VSS-Agents

#parameters:
#- name: issuer
#  displayName: Issuer Email
#  type: string

#- name: action
#  displayName: Action
#  type: string
#  default: create
#  values:
#  - create
  #- renew WIP
  #- revoke WIP
variables:
   SYSTEM_ACCESSTOKEN: $(System.AccessToken)
resources:
  repositories:
  - repository: nm-factory-inf-env-dev
    type: git
    name: ecl-ado-prj-iac/nm-factory-inf-env-dev
    path: repositories
  - repository: nm-factory-inf-env-pro
    type: git
    name: ecl-ado-prj-iac/nm-factory-inf-env-pro
    path: repositories

steps:
- checkout: nm-factory-inf-env-dev
- checkout: nm-factory-inf-env-pro

- script: |
    LOCAL_FOLDER_NAME=`date  +%F_%Hh%Mm%Ss`
    BACKUP_FILE=${LOCAL_FOLDER_NAME}.tgz
    echo "##vso[task.setvariable variable=BACKUP_FILE]${BACKUP_FILE}"
    ls -lat
    mkdir ./${LOCAL_FOLDER_NAME}
    mv ./nm-factory-* ./${LOCAL_FOLDER_NAME}
    tar -cvzf ${BACKUP_FILE} ./${LOCAL_FOLDER_NAME}


- task: AzureCLI@2
  displayName: "Upload backups"
  inputs:
#   azureSubscription: 'ecl-az-fact-svc-01-armconnection-azure-euroctl-hub-subs'
    azureSubscription: 'ecl-az-fact-svc-01-armconnection'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      #!/bin/bash
      echo "BACKUP_FILE = ${BACKUP_FILE}"
      CONTAINER_FOLDER = azureGitRepos
      ORGANIZATION=https://dev.azure.com/ecl-ado-factory/
      PROJECT=ecl-ado-prj-iac

      ACCOUNT_NAME=eclazfactsta01assets
      CONTAINER_NAME=ecl-az-fact-stc-01-backups
      ACCOUNT_KEY=$(az storage account keys list --account-name ${ACCOUNT_NAME} --query="[0].value")
      az storage account keys list --account-name ${ACCOUNT_NAME} --query="[0].value"
      
      echo "List downloaded repositories"
      ls -lat

      #to be removed
      #az extension add --name azure-devops
      #az --version
      #az account show
      az storage blob upload \
        --account-name ${ACCOUNT_NAME} \
        --account-key ${ACCOUNT_KEY} \
        --container-name ${CONTAINER_NAME} \
        --file ${BACKUP_FILE} \
        --name ${CONTAINER_FOLDER}/${BACKUP_FILE}


      #az config set extension.use_dynamic_install=yes_without_prompt
      #az repos list --org $ORGANIZATION --project $PROJECT --debug
      #echo "Listing repositories ... done"
      #if [ $? -eq 0 ]
      #then
      #  echo "Git repository list:"
      #  jq .[].sshUrl /tmp/gitRepo.output > /tmp/gitRepo.list
      #  cat /tmp/gitRepo.list
      #else
      #  echo "Error fetching the Git repository list"
      #  exit 1
      #fi

